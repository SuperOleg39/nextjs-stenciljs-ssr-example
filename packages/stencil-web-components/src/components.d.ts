/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface ChildComponent {
        "childMessage": string;
    }
    interface ComponentWithEvent {
        "message": string;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        "initialCount": number;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface ParentComponent {
        "childMessage": string;
        "parentMessage": string;
    }
}
declare global {
    interface HTMLChildComponentElement extends Components.ChildComponent, HTMLStencilElement {
    }
    var HTMLChildComponentElement: {
        prototype: HTMLChildComponentElement;
        new (): HTMLChildComponentElement;
    };
    interface HTMLComponentWithEventElement extends Components.ComponentWithEvent, HTMLStencilElement {
    }
    var HTMLComponentWithEventElement: {
        prototype: HTMLComponentWithEventElement;
        new (): HTMLComponentWithEventElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLParentComponentElement extends Components.ParentComponent, HTMLStencilElement {
    }
    var HTMLParentComponentElement: {
        prototype: HTMLParentComponentElement;
        new (): HTMLParentComponentElement;
    };
    interface HTMLElementTagNameMap {
        "child-component": HTMLChildComponentElement;
        "component-with-event": HTMLComponentWithEventElement;
        "my-component": HTMLMyComponentElement;
        "parent-component": HTMLParentComponentElement;
    }
}
declare namespace LocalJSX {
    interface ChildComponent {
        "childMessage"?: string;
    }
    interface ComponentWithEvent {
        "message"?: string;
        "onNew-message"?: (event: CustomEvent<string>) => void;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        "initialCount"?: number;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface ParentComponent {
        "childMessage"?: string;
        "parentMessage"?: string;
    }
    interface IntrinsicElements {
        "child-component": ChildComponent;
        "component-with-event": ComponentWithEvent;
        "my-component": MyComponent;
        "parent-component": ParentComponent;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "child-component": LocalJSX.ChildComponent & JSXBase.HTMLAttributes<HTMLChildComponentElement>;
            "component-with-event": LocalJSX.ComponentWithEvent & JSXBase.HTMLAttributes<HTMLComponentWithEventElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "parent-component": LocalJSX.ParentComponent & JSXBase.HTMLAttributes<HTMLParentComponentElement>;
        }
    }
}
